name: Scheduled tests

on:
  pull_request:

permissions:
  contents: read
  issues: write

jobs:
  test:
    runs-on: ubuntu-latest
    env: Scheduled Testing

    steps:
    - uses: actions/checkout@v3

    - name: Store commit
      run: |
        echo "GIT_COMMIT=$(git rev-parse HEAD)" >> $GITHUB_ENV

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: cache poetry install
      uses: actions/cache@v3
      id: cache-poetry
      with:
        path: ~/.local
        key: poetry-1.7.1-0

    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.1
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: cache deps
      id: cache-deps
      uses: actions/cache@v3
      with:
        path: .venv
        key: pydeps-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies with caching
      run: poetry install --no-interaction --no-root
      if: steps.cache-deps.outputs.cache-hit != 'true'

    - name: Install with plugins
      run: poetry install --no-interaction --extras all_plugins

    - name: Write secrets
      env:
        secrets_config: |
          [together]
          api_key = "${{ secrets.TOGETHER_API_KEY }}"

          [openai]
          api_key = "${{ secrets.OPENAI_API_KEY }}"
      run: |
        mkdir -p config
        echo $SECRETS_CONFIG > config/secrets.toml

    - name: Test with plugin
      run: |
        source .venv/bin/activate
        poetry run pytest -v --expensive-tests plugins/validation_tests/test_object_creation.py -k test_all_suts_can_evaluate 

    - uses: JasonEtco/create-an-issue@v2
      if: failure()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RUN_ID: ${{ github.run_id }}
      with:
        filename: .github/failed-scheduled-issue.md
        update_existing: true
